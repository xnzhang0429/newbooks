<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xiaoxiannv.books.mapper.BookMapper">
  <resultMap id="BaseResultMap" type="com.xiaoxiannv.books.po.Book">
    <id column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="book_name" jdbcType="VARCHAR" property="bookName" />
    <result column="book_time" jdbcType="BIGINT" property="bookTime" />
    <result column="book_user" jdbcType="VARCHAR" property="bookUser" />
    <result column="book_link" jdbcType="VARCHAR" property="bookLink" />
    <result column="book_password" jdbcType="CHAR" property="bookPassword" />
    <result column="book_sort" jdbcType="INTEGER" property="bookSort" />
    <result column="book_down" jdbcType="INTEGER" property="bookDown" />
    <result column="book_pic" jdbcType="VARCHAR" property="bookPic" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    book_id, book_name, book_time, book_user, book_link, book_password, book_sort, book_down, 
    book_pic
  </sql>
  <select id="selectByExample" parameterType="com.xiaoxiannv.books.po.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where book_id = #{bookId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.xiaoxiannv.books.po.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.xiaoxiannv.books.po.Book">
    <selectKey keyProperty="bookId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book (book_name, book_time, book_user, 
      book_link, book_password, book_sort, 
      book_down, book_pic)
    values (#{bookName,jdbcType=VARCHAR}, #{bookTime,jdbcType=BIGINT}, #{bookUser,jdbcType=VARCHAR}, 
      #{bookLink,jdbcType=VARCHAR}, #{bookPassword,jdbcType=CHAR}, #{bookSort,jdbcType=INTEGER}, 
      #{bookDown,jdbcType=INTEGER}, #{bookPic,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xiaoxiannv.books.po.Book">
    <selectKey keyProperty="bookId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="bookName != null">
        book_name,
      </if>
      <if test="bookTime != null">
        book_time,
      </if>
      <if test="bookUser != null">
        book_user,
      </if>
      <if test="bookLink != null">
        book_link,
      </if>
      <if test="bookPassword != null">
        book_password,
      </if>
      <if test="bookSort != null">
        book_sort,
      </if>
      <if test="bookDown != null">
        book_down,
      </if>
      <if test="bookPic != null">
        book_pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="bookName != null">
        #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookTime != null">
        #{bookTime,jdbcType=BIGINT},
      </if>
      <if test="bookUser != null">
        #{bookUser,jdbcType=VARCHAR},
      </if>
      <if test="bookLink != null">
        #{bookLink,jdbcType=VARCHAR},
      </if>
      <if test="bookPassword != null">
        #{bookPassword,jdbcType=CHAR},
      </if>
      <if test="bookSort != null">
        #{bookSort,jdbcType=INTEGER},
      </if>
      <if test="bookDown != null">
        #{bookDown,jdbcType=INTEGER},
      </if>
      <if test="bookPic != null">
        #{bookPic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.xiaoxiannv.books.po.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.bookId != null">
        book_id = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.bookName != null">
        book_name = #{record.bookName,jdbcType=VARCHAR},
      </if>
      <if test="record.bookTime != null">
        book_time = #{record.bookTime,jdbcType=BIGINT},
      </if>
      <if test="record.bookUser != null">
        book_user = #{record.bookUser,jdbcType=VARCHAR},
      </if>
      <if test="record.bookLink != null">
        book_link = #{record.bookLink,jdbcType=VARCHAR},
      </if>
      <if test="record.bookPassword != null">
        book_password = #{record.bookPassword,jdbcType=CHAR},
      </if>
      <if test="record.bookSort != null">
        book_sort = #{record.bookSort,jdbcType=INTEGER},
      </if>
      <if test="record.bookDown != null">
        book_down = #{record.bookDown,jdbcType=INTEGER},
      </if>
      <if test="record.bookPic != null">
        book_pic = #{record.bookPic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set book_id = #{record.bookId,jdbcType=INTEGER},
      book_name = #{record.bookName,jdbcType=VARCHAR},
      book_time = #{record.bookTime,jdbcType=BIGINT},
      book_user = #{record.bookUser,jdbcType=VARCHAR},
      book_link = #{record.bookLink,jdbcType=VARCHAR},
      book_password = #{record.bookPassword,jdbcType=CHAR},
      book_sort = #{record.bookSort,jdbcType=INTEGER},
      book_down = #{record.bookDown,jdbcType=INTEGER},
      book_pic = #{record.bookPic,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.xiaoxiannv.books.po.Book">
    update book
    <set>
      <if test="bookName != null">
        book_name = #{bookName,jdbcType=VARCHAR},
      </if>
      <if test="bookTime != null">
        book_time = #{bookTime,jdbcType=BIGINT},
      </if>
      <if test="bookUser != null">
        book_user = #{bookUser,jdbcType=VARCHAR},
      </if>
      <if test="bookLink != null">
        book_link = #{bookLink,jdbcType=VARCHAR},
      </if>
      <if test="bookPassword != null">
        book_password = #{bookPassword,jdbcType=CHAR},
      </if>
      <if test="bookSort != null">
        book_sort = #{bookSort,jdbcType=INTEGER},
      </if>
      <if test="bookDown != null">
        book_down = #{bookDown,jdbcType=INTEGER},
      </if>
      <if test="bookPic != null">
        book_pic = #{bookPic,jdbcType=VARCHAR},
      </if>
    </set>
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xiaoxiannv.books.po.Book">
    update book
    set book_name = #{bookName,jdbcType=VARCHAR},
      book_time = #{bookTime,jdbcType=BIGINT},
      book_user = #{bookUser,jdbcType=VARCHAR},
      book_link = #{bookLink,jdbcType=VARCHAR},
      book_password = #{bookPassword,jdbcType=CHAR},
      book_sort = #{bookSort,jdbcType=INTEGER},
      book_down = #{bookDown,jdbcType=INTEGER},
      book_pic = #{bookPic,jdbcType=VARCHAR}
    where book_id = #{bookId,jdbcType=INTEGER}
  </update>
</mapper>